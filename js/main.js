const cartCount=document.querySelector(".cart__count"),cartLink=document.querySelector(".cart__btn"),makeOrder=document.querySelector(".make-order-btn"),cartBody=document.querySelector(".cart-items tbody");let afterOrder=!1;function setCardCount(){currentUser&&(cartCount.innerHTML=currentUser.cart.size,currentUser.cart.size?cartCount.style.display="inline-flex":cartCount.style.display="none")}function clearCart(){cartBody.innerHTML=""}function renderCart(){if(clearCart(),currentUser&&currentUser.cart.size)document.querySelector(".make-order").style.display="flex",currentUser.cart.goods.forEach((t=>{const e=findProduct(t.id);cartBody.innerHTML+=`\n          <tr>\n            <td>\n              <img class="cart-item__img" src="${e.mainImg}" alt="${e.name}">\n            </td>\n            <td><p>${e.name}</p></td>\n            <td><p>${e.price}<span class="product__price-currency">&nbsp;&#8372;</span></p></td>\n            <td>\n              <div class="product__counter counter" style="display: flex">\n              <button class="btn-reset counter__btn counter__dcr" type="button">\n                <svg>\n                  <use xlink:href="img/sprite.svg#dcr"></use>\n                </svg>\n              </button>\n              <input class="counter__input" type="text" value="${t.quantity}" />\n              <button class="btn-reset counter__btn counter__incr" type="button">\n                <svg>\n                  <use xlink:href="img/sprite.svg#incr"></use>\n                </svg>\n              </button>\n            </div>\n            </td>\n            <td>\n              <button class="btn-reset cart-item__delete" data-id="${t.id}" type="button">\n                <svg>\n                  <use xlink:href="img/sprite.svg#trash"></use>\n                </svg>\n              </button>\n            </td>\n          </tr>\n        `})),document.querySelector(".make-order .price").innerHTML=currentUser.cart.totalSum;else{cartBody.innerHTML=afterOrder?'\n    <tr>\n      <td class="fade"><p style="padding: 30px 14px 80px;\n      font-size: 36px;">Дякуємо за замовлення</p></td>\n    </tr>\n      ':'\n      <tr>\n        <td class="fade"><p style="padding: 30px 14px 80px;\n        font-size: 36px;">Порожній кошик</p></td>\n      </tr>\n      ',afterOrder=!1;document.querySelector(".make-order .price").innerHTML="",document.querySelector(".make-order").style.display="none"}document.querySelectorAll(".cart-item__delete").forEach((t=>{t.addEventListener("click",(e=>{e.stopPropagation(),currentUser.cart.removeProduct(t.dataset.id),setCardCount(),renderCart()}))}))}cartLink.addEventListener("click",renderCart),makeOrder.onclick=function(t){t.preventDefault(),currentUser.cart.checkout(),afterOrder=!0,setCardCount(),renderCatalog(loadingQuantity),renderCart()};const catalogList=document.querySelector(".catalog-list"),catalogLoadMore=document.querySelector(".catalog__more");let loadingQuantity=4,catalogLength=null,filteredProducts=[];async function loadProducts(){await getProductsFromDB(),renderCatalog(loadingQuantity)}function isProductInCart(t){let e=null;return currentUser&&currentUser.cart.goods.length&&(e=currentUser.cart.goods.find((e=>e.id===t))),{isInCart:!!e,inCartValue:e?.quantity||0}}function getFilters(){const t=document.forms.filters.elements;return{price:{min:t.price__min.value,max:t.price__max.value},instock:t.instock.checked?1:0,sort:t.sort.value}}catalogList&&(loadProducts(),catalogLoadMore.addEventListener("click",(t=>{loadingQuantity+=4,renderCatalog(loadingQuantity),visibilityLoadMore()})));const priceInput=document.querySelectorAll(".catalog-price__input");priceInput.forEach((t=>{t.addEventListener("keypress",(t=>{isNumber(t)}))}));const filters=document.forms.filters;function visibilityLoadMore(){catalogLoadMore.style.display=loadingQuantity>=catalogLength?"none":"block"}async function getProductsFromDB(){const t=await fetch("./data/products.json");result=await t.json(),products=result.map((t=>Object.assign(new Product,t)))}function renderCatalog(t){const e=getFilters();filteredProducts=products.filter((t=>t.price>=e.price.min&&t.price<=e.price.max&&t.amount>=e.instock)),filteredProducts.sort(((t,r)=>t.price>r.price?e.sort:t.price<r.price?-e.sort:0)),catalogLength=filteredProducts.length,catalogList.innerHTML="";for(let e=0;e<catalogLength;e++)if(e<t){let t=filteredProducts[e],r=!!t.amount||!1;const{isInCart:n,inCartValue:o}=isProductInCart(t.id);catalogList.innerHTML+=`\n      <li class="catalog-list__item">\n        <article\n          class="product ${n?"product--inCart":""} ${r?"":"product--disabled"}">\n          <div class="product__img">\n            <img src="${t.mainImg}" alt="${t.name}" />\n          </div>\n          <div class="product__content">\n            <h3 class="product__title">${t.name}</h3>\n            <p class="product__description"></p>\n            <div class="product__price">\n              <span class="product__price-value">${t.price}</span>\n              <span class="product__price-currency">&nbsp;&#8372;</span>\n            </div>\n            <div class="product__availability">\n            ${r?"Є в наявності":"Немає в наявності"}\n            </div>\n            <div class="product__control" data-product-id="${t.id}" data-product-name="${t.name}">\n              <div class="product__counter counter">\n                <button\n                  class="btn-reset counter__btn counter__dcr"\n                  type="button"\n                >\n                  <svg>\n                    <use xlink:href="img/sprite.svg#dcr"></use>\n                  </svg>\n                </button>\n                <input class="counter__input" type="text" value="${o||1}" />\n                <button\n                  class="btn-reset counter__btn counter__incr"\n                  type="button" ${o<t.amount||"disabled"}\n                >\n                  <svg>\n                    <use xlink:href="img/sprite.svg#incr"></use>\n                  </svg>\n                </button>\n              </div>\n              <button class="btn-reset product__btn" type="button">В кошик</button>\n            </div>\n          </div>\n        </article>\n      </li>\n      `}}filters.addEventListener("change",(()=>{loadingQuantity=4,renderCatalog(loadingQuantity),visibilityLoadMore(),console.log(getFilters())}));class Cart{constructor(){this.goods=[]}addProduct(t,e,r=1){this.goods.push({id:t,name:e,quantity:r})}changeQuantity(t,e){this.goods.find((e=>e.id===t)).quantity=e}removeProduct(t){this.goods.splice(this.goods.findIndex((e=>e.id===t)),1)}withdraw(){this.goods=[]}checkout(){this.goods.length&&currentUser.money>this.totalSum&&(currentUser.money-=this.totalSum,this.goods.forEach((t=>{products.find((e=>e.id===t.id)).substractAmount(t.quantity)})),currentUser.addOrder(),this.withdraw())}get totalSum(){return this.goods.reduce(((t,e)=>t+products.find((t=>t.id===e.id)).price*e.quantity),0)}get size(){return this.goods.length}}class Order{constructor(t,e){this.date=new Date,this.sum=e,this.products=t}}class Product{constructor(t,e,r){this.name=t,this.price=e,this.amount=r}substractAmount(t){this.amount-=t}}class User{constructor(t,e){this.id=`u${Date.now()}`,this.name=t,this.money=e,this.orders=[],this.cart=this.getCart(),this.getCart()}showOrderHistory(t=1,e="date"){return this.orders.sort(((r,n)=>r[e]>n[e]?t:r[e]<n[e]?-t:0))}getCart(){return new Cart}addOrder(){this.orders.push(new Order(this.cart.goods,this.cart.totalSum))}}class Admin extends User{constructor(t){super(t)}createProduct(t,e,r){products.push(new Product(t,e,r))}}const modalLink=document.querySelectorAll(".modal-link"),modalClose=document.querySelectorAll(".modal__close"),body=document.querySelector("body"),header=document.querySelector(".header");let unlock=!0;function openPopup(t){const e=window.innerWidth-document.documentElement.clientWidth+"px";body.classList.add("lock"),body.style.paddingRight=e,header.style.paddingRight=e,t.classList.add("active"),t.addEventListener("click",closeFromLock)}function closePopup(t){if(t.classList.remove("active"),body.classList.remove("lock"),body.style.paddingRight="",header.style.paddingRight="",t.closest("#cart")){renderCatalog(loadingQuantity);document.querySelector(".make-order .price").innerHTML="",document.querySelector(".make-order").style.display="none",setTimeout(clearCart,500)}t.removeEventListener("click",closeFromLock)}function closeFromLock(t){t.target.closest(".modal__area")||closePopup(t.target.closest(".modal"))}modalLink.length&&modalLink.forEach((t=>{t.addEventListener("click",(function(t){const e=document.querySelector(this.dataset.modal);t.preventDefault(),openPopup(e)}))})),modalClose.length&&modalClose.forEach((t=>{t.addEventListener("click",(function(e){closePopup(t.closest(".modal"))}))}));const navList=document.querySelector(".nav__list");navList.addEventListener("click",(t=>{t.preventDefault();const e=document.querySelector(".header").getBoundingClientRect().height;console.log(e);const r=t.target.closest(".nav__link");if(r&&/^#\w+/.test(r.hash)){const t=document.querySelector(r.hash).getBoundingClientRect().top-e+window.pageYOffset;console.log(t),window.scrollTo({top:t,behavior:"smooth"})}}));const newUserBtn=document.querySelector(".new-user__submit");function newUser(t,e){currentUser=new User(t,e)}newUserBtn.addEventListener("click",(function(t){t.preventDefault();const e=document.querySelector(".new-user__name"),r=document.querySelector(".new-user__money");if(""==e.value||""==r.value)return""==e.value?e.style.borderColor="#f00":e.style.borderColor="",void(""==r.value?r.style.borderColor="#f00":r.style.borderColor="");newUser(e.value,r.value),closePopup(this.closest(".modal")),e.value="",r.value="",e.style.borderColor="",r.style.borderColor="",setCardCount(),renderCatalog(loadingQuantity)})),catalogList.addEventListener("click",(t=>{const e=t.target.closest(".product__control");if(e){const r=e.dataset.productId,n=e.dataset.productName,o=e.querySelector(".counter__input"),c=e.querySelector(".counter__incr"),s=e.querySelector(".counter__dcr"),a=findProduct(r).amount;t.target.classList.contains("product__btn")?(currentUser.cart.addProduct(r,n),t.target.closest(".product").classList.add("product--inCart")):s.contains(t.target)?o.value>1&&o.value<=a?(o.value--,c.disabled=!1,currentUser.cart.changeQuantity(r,o.value)):(currentUser.cart.removeProduct(r),t.target.closest(".product").classList.remove("product--inCart")):c.contains(t.target)&&(o.value<a&&(o.value++,currentUser.cart.changeQuantity(r,o.value)),o.value==a&&(c.disabled=!0)),setCardCount()}})),catalogList.addEventListener("input",(t=>{if(t.target.closest(".counter__input")){const e=t.target.closest(".product__control"),r=e.dataset.productId,n=(e.dataset.productName,e.querySelector(".counter__incr")),o=findProduct(r).amount;0==t.target.value?(currentUser.cart.removeProduct(r),t.target.closest(".product").classList.remove("product--inCart"),t.target.value=1,n.disabled=!1):t.target.value>=o?(n.disabled=!0,t.target.value=o,currentUser.cart.changeQuantity(r,t.target.value)):(n.disabled=!1,currentUser.cart.changeQuantity(r,t.target.value)),setCardCount()}})),catalogList.addEventListener("keypress",(t=>{t.target.closest(".counter__input")&&isNumber(t)}));let currentUser=null,products=[];function isEmptyObject(t){return!Object.keys(t).length}function isNumber(t){let e=t.which?t.which:t.keyCode;console.log(t),e>31&&(e<48||e>57)&&t.preventDefault()}function findProduct(t){return products.find((e=>e.id===t))}currentUser=new User("Vova",5e3);